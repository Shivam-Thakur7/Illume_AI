import React, { useState } from 'react';
import { motion } from 'framer-motion';
import TutorialSlides from './TutorialSlides';
import { useNavigate } from 'react-router-dom';

function Services() {
  const [showTutorial, setShowTutorial] = useState(false);
  const navigate = useNavigate();

  const categories = [
    {
      title: 'Anime',
      image: 'https://i.pinimg.com/474x/7a/5f/4f/7a5f4fdeb5d0aac00530e09bea810bce.jpg',
      alt: 'Anime style AI art',
      description: 'Generate AI-based anime characters and scenes with vibrant colors and style.'
    },
    {
      title: '3D Art',
      image: 'https://i.pinimg.com/474x/5c/8a/bd/5c8abdd53fef39eb887f8f156fc30766.jpg',
      alt: '3D AI render',
      description: 'Experience hyper-realistic 3D rendered images generated by powerful AI models.'
    },
    {
      title: 'Realistic Portraits',
      image: 'https://i.pinimg.com/474x/20/98/ff/2098ff7cdc3561665d0a800e483c8d8a.jpg',
      alt: 'Realistic AI portrait',
      description: 'Create detailed, lifelike portraits based on simple text prompts.'
    },
    {
      title: 'Concept Art',
      image: 'https://i.pinimg.com/474x/07/7e/98/077e9820bd021d877f91352b7a134ea6.jpg',
      alt: 'AI-generated concept art',
      description: 'Design futuristic landscapes, characters, and objects for storytelling or games.'
    },
    {
      title: 'Fantasy Worlds',
      image: 'https://i.pinimg.com/474x/00/17/51/00175119d88f620e277c99deef524a99.jpg',
      alt: 'Fantasy world by AI',
      description: 'Explore surreal realms and magical universes generated by our AI.'
    },
    {
      title: 'Ghibli Art',
      image: 'https://i.pinimg.com/474x/55/ff/92/55ff9238b8b688c53ccde7c80d0d0205.jpg',
      alt: 'Ghibli art with AI',
      description: 'Turn text prompts into retro pixel-style images with an artistic twist.'
    }
  ];

  return (
    <section className="py-20 bg-gradient-to-b from-black via-gray-900 to-black text-white relative overflow-hidden">
      <div className="container mx-auto px-6 sm:px-8 relative z-10">
        <div className="text-center mb-16">
          <motion.h2
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            transition={{ duration: 0.8 }}
            className="text-4xl md:text-4xl font-extrabold text-transparent bg-clip-text bg-gradient-to-r from-purple-400 via-pink-500 to-indigo-500 mb-6"
          >
            Explore Galaxy of AI Styles
          </motion.h2>
          <motion.p
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            transition={{ duration: 0.8, delay: 0.2 }}
            className="text-gray-300 text-lg max-w-2xl mx-auto"
          >
            Choose a category and dive into the world of AI-generated creativity.
          </motion.p>
        </div>

        {/* Cards Grid */}
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-10">
          {categories.map((category, index) => (
            <motion.div
              key={category.title}
              initial={{ opacity: 0, y: 20 }}
              whileInView={{ opacity: 1, y: 0 }}
              viewport={{ once: true }}
              transition={{ duration: 0.8, delay: index * 0.1 }}
              whileHover={{ scale: 1.03 }}
              className="relative group"
            >
              <div className="bg-gradient-to-br from-[#1e1b4b] to-[#312e81] rounded-2xl p-6 shadow-xl transition-all duration-300 hover:shadow-2xl">
                <img
                  src={category.image}
                  alt={category.alt}
                  className="w-full h-48 object-cover rounded-xl mb-4"
                />
                <h3 className="text-2xl font-bold text-white mb-3">{category.title}</h3>
                <p className="text-gray-300 text-sm">{category.description}</p>
              </div>
            </motion.div>
          ))}
        </div>

        {/* Action Buttons */}
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          viewport={{ once: true }}
          transition={{ duration: 0.8, delay: 0.6 }}
          className="flex justify-center items-center gap-6 mt-20 flex-wrap"
        >
          {/* Navigate to Generate */}
          <motion.button
            whileHover={{ scale: 1.05 }}
            whileTap={{ scale: 0.95 }}
            onClick={() => navigate('/generate')}
            className="bg-gradient-to-r from-indigo-500 to-purple-600 px-8 py-3 rounded-full text-lg font-semibold text-white shadow-lg hover:shadow-2xl transition-all"
          >
            Generate Image
          </motion.button>
          {/* Navigate to Explore */}
          <motion.button
            whileHover={{ scale: 1.05 }}
            whileTap={{ scale: 0.95 }}
            onClick={() => navigate('/explore')}
            className="bg-gradient-to-r from-indigo-500 to-purple-600 px-8 py-3 rounded-full text-lg font-semibold text-white shadow-lg hover:shadow-2xl transition-all"
          >
            Explore
          </motion.button>

          {/* Open Tutorial Modal */}
          <motion.button
            whileHover={{ scale: 1.05 }}
            whileTap={{ scale: 0.95 }}
            onClick={() => setShowTutorial(true)}
            className="bg-gradient-to-r from-pink-500 to-purple-600 px-8 py-3 rounded-full text-lg font-semibold text-white shadow-lg hover:shadow-2xl transition-all"
          >
            Start Tutorial
          </motion.button>
           {/* Open Tutorial Modal */}
           <motion.button
            whileHover={{ scale: 1.05 }}
            whileTap={{ scale: 0.95 }}
            onClick={() => {
              navigate('/score');
              window.scrollTo({ top: 0, behavior: 'smooth' });
            }}
            className="bg-gradient-to-r from-pink-500 to-purple-600 px-8 py-3 rounded-full text-lg font-semibold text-white shadow-lg hover:shadow-2xl transition-all"
          >
            Score
          </motion.button>
        </motion.div>
      </div>

      {/* Tutorial Modal */}
      {showTutorial && (
        <div className="fixed inset-0 bg-black bg-opacity-70 flex items-center justify-center z-50">
          <TutorialSlides onClose={() => setShowTutorial(false)} />
        </div>
      )}
    </section>
  );
}

export default Services;
